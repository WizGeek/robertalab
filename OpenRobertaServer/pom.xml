<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright 2014, 2015 The Open Roberta project. See the NOTICE file distributed with this work for additional information regarding copyright ownership. Licensed 
	under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>de.fhg.iais.openroberta</groupId>
		<artifactId>OpenRobertaParent</artifactId>
		<version>1.4.0-SNAPSHOT</version>
		<relativePath>../OpenRobertaParent</relativePath>
	</parent>
	<artifactId>OpenRobertaServer</artifactId>
	<name>OpenRobertaServer</name>
	<description>the server of the OpenRoberta application including the static resources delivered to the browser</description>
	<dependencies>
		<dependency>
			<groupId>de.fhg.iais.openroberta</groupId>
			<artifactId>OpenRobertaRobot</artifactId>
		</dependency>
		<dependency>
			<groupId>de.fhg.iais.openroberta</groupId>
			<artifactId>RobotEV3</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-guice</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant-launcher</artifactId>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.detro</groupId>
			<artifactId>phantomjsdriver</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javax.mail-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.jopt-simple</groupId>
			<artifactId>jopt-simple</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.9</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>de.fhg.iais.roberta:EV3Menu:jar:</exclude>
								<exclude>de.fhg.iais.roberta:ev3classes:jar:</exclude>
								<exclude>de.fhg.iais.roberta:dbusjava:jar:</exclude>
								<exclude>org.lejos:jna:jar:</exclude>
							</excludes>
							<includeScope>compile</includeScope>
							<outputDirectory>${project.build.directory}/resources</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
					<execution>
						<id>copyServer</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>de.fhg.iais.openroberta</groupId>
									<artifactId>OpenRobertaServer</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/resources</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
					<execution>
						<id>copyUpdateResources</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>de.fhg.iais.openroberta</groupId>
									<artifactId>EV3Runtime</artifactId>
									<version>${ev3embedded.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>de.fhg.iais.openroberta</groupId>
									<artifactId>EV3Menu</artifactId>
									<version>${ev3embedded.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.json</groupId>
									<artifactId>json</artifactId>
									<version>${json.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.java-websocket</groupId>
									<artifactId>Java-WebSocket</artifactId>
									<version>${ev3.websocket.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/updateResources</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
					<execution>
						<id>copyCrossCompilerResources</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>de.fhg.iais.openroberta</groupId>
									<artifactId>EV3Runtime</artifactId>
									<version>${ev3embedded.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.json</groupId>
									<artifactId>json</artifactId>
									<version>${json.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>de.fhg.iais.roberta</groupId>
									<artifactId>ev3classes</artifactId>
									<version>${ev3classes.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>de.fhg.iais.roberta</groupId>
									<artifactId>dbusjava</artifactId>
									<version>${dbusjava.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.lejos</groupId>
									<artifactId>jna</artifactId>
									<version>${jna.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.java-websocket</groupId>
									<artifactId>Java-WebSocket</artifactId>
									<version>${ev3.websocket.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/crossCompilerResources</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- auto install of phantomjs -->
				<groupId>com.github.klieber</groupId>
				<artifactId>phantomjs-maven-plugin</artifactId>
				<version>0.7</version>
				<executions>
					<execution>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<version>2.1.1</version>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>common-junit48</artifactId>
						<version>2.17</version>
					</dependency>
				</dependencies>
				<configuration>
					<includes>
						<include>**/*.class</include>
					</includes>
					<excludedGroups>de.fhg.iais.roberta.util.testsetup.IntegrationTest</excludedGroups>
					<!-- providing phantomjs for unit tests -->
					<systemPropertyVariables>
						<phantomjs.binary>${phantomjs.binary}</phantomjs.binary>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.17</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>common-junit48</artifactId>
						<version>2.17</version>
					</dependency>
				</dependencies>
				<configuration>
					<groups>de.fhg.iais.roberta.util.testsetup.IntegrationTest</groups>
					<!-- setting phantomjs path for integration tests, webdriver capabilities -->
					<systemPropertyVariables>
						<phantomjs.binary>${phantomjs.binary}</phantomjs.binary>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*.class</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>
	<!-- mvn site creates html test reports and code documentation -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>gr.abiss.mvn.plugins</groupId>
				<artifactId>maven-jstools-plugin</artifactId>
				<version>0.6</version>
				<inherited>false</inherited>
				<configuration>
					<jsDir>${basedir}/staticResources/roberta</jsDir>
					<!-- this is actually the default -->
					<includes>**/*.js</includes>
					<!-- maybe you need to exclude compressed JS files -->
					<excludes>**/*_compressed.js</excludes>
					<!-- this is actually the default -->
					<caseSensitive>true</caseSensitive>
					<outputBaseDirectory>${project.build.directory}/site/</outputBaseDirectory>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<!-- include the desired reports -->
							<!--<report>jslint</report> -->
							<report>jsdoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.18.1</version>
			</plugin>
		</plugins>
	</reporting>
</project>
